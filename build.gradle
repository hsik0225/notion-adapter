plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.3'
	id 'jacoco'
}

group = 'com.hyeonsik'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Application
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DBMS
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'mysql:mysql-connector-java'
	testRuntimeOnly 'com.h2database:h2'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task testCoverage(type: Test) {
	group 'verification'
	description 'Runs the unit tests with coverage'

	dependsOn(test, jacocoTestReport, jacocoTestCoverageVerification)
	jacocoTestReport.mustRunAfter(test)
	jacocoTestCoverageVerification.mustRunAfter(jacocoTestReport)
}

check {
	dependsOn(testCoverage)
}

jar {
	enabled = false
}

sonarqube {
	properties {
		property "sonar.projectKey", "notion-adapter"

		property "sonar.java.binaries", "${buildDir}/classes"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.sources", "src/main/java"

		property "sonar.tests", "src/test/java"
		property "sonar.test.inclusions", "**/*Test.java"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	reports {
		html.required = false
		xml.required = true
		csv.required = false
	}

	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it,
							excludes: [
									'com/hyeonsik/notionadapter/*Applicaiton'
							]
					)
				})
		)
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = false
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.50
			}

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.50
			}

			excludes = [
					'com.hyeonsik.notionadapter.*Application',
			]
		}
	}
}
